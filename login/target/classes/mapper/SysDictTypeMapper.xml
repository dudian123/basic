<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.SysDictTypeMapper">

    <resultMap type="org.example.domain.entity.SysDictType" id="SysDictTypeResult">
        <result property="dictId"    column="dict_id"    />
        <result property="dictName"  column="dict_name"  />
        <result property="dictType"  column="dict_type"  />
        <result property="status"    column="status"     />
        <result property="createBy"  column="create_by"  />
        <result property="createTime" column="create_time" />
        <result property="updateBy"  column="update_by"  />
        <result property="updateTime" column="update_time" />
        <result property="remark"    column="remark"     />
    </resultMap>

    <sql id="selectDictTypeVo">
        select dict_id, dict_name, dict_type, status, create_by, create_time, update_by, update_time, remark
        from sys_dict_type
    </sql>

    <select id="selectDictTypeList" parameterType="org.example.domain.entity.SysDictType" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        <where>
            <if test="dictName != null and dictName != ''">
                AND dict_name like concat('%', #{dictName}, '%')
            </if>
            <if test="dictType != null and dictType != ''">
                AND dict_type like concat('%', #{dictType}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        order by dict_id
    </select>

    <select id="selectDictTypeByType" parameterType="String" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_type = #{dictType}
    </select>

    <select id="selectDictTypeById" parameterType="Long" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_id = #{dictId}
    </select>

    <select id="checkDictTypeUnique" parameterType="String" resultType="int">
        select count(1) from sys_dict_type where dict_type = #{dictType} limit 1
    </select>

    <insert id="insertDictType" parameterType="org.example.domain.entity.SysDictType" useGeneratedKeys="true" keyProperty="dictId">
        insert into sys_dict_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dictName != null and dictName != ''">dict_name,</if>
            <if test="dictType != null and dictType != ''">dict_type,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dictName != null and dictName != ''">#{dictName},</if>
            <if test="dictType != null and dictType != ''">#{dictType},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            sysdate()
        </trim>
    </insert>

    <update id="updateDictType" parameterType="org.example.domain.entity.SysDictType">
        update sys_dict_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="dictName != null and dictName != ''">dict_name = #{dictName},</if>
            <if test="dictType != null and dictType != ''">dict_type = #{dictType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </trim>
        where dict_id = #{dictId}
    </update>

    <delete id="deleteDictTypeByIds" parameterType="Long">
        delete from sys_dict_type where dict_id in
        <foreach item="dictId" collection="array" open="(" separator="," close=")">
            #{dictId}
        </foreach>
    </delete>

    <delete id="deleteDictTypeById" parameterType="Long">
        delete from sys_dict_type where dict_id = #{dictId}
    </delete>

</mapper>